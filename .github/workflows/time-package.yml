name: Automatic package creation based on the monthly tag
on:
  workflow_dispatch:
  push:
      tags:
        - v0.0.**
permissions:
  id-token: write
  attestations: write
  contents: read
jobs:
  package:
    name: Createa Debian package
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      CI_PIPELINE: true
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          cache: false
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Install mockgen
        run: |
          go install github.com/golang/mock/mockgen@v1.7.0-rc.1
      - name: Install gopls
        run: |
          go install golang.org/x/tools/gopls@latest
      - name: Install guru
        run: |
          go install golang.org/x/tools/cmd/guru@latest
      - name: Install Protoc
        run: |
          # Install protoc with ARM64 support
          PROTOC_VERSION="25.1"
          ARCH=$(uname -m)
          if [[ "$ARCH" == "x86_64" ]]; then
            PROTOC_ARCH="x86_64"
          elif [[ "$ARCH" == "aarch64" || "$ARCH" == "arm64" ]]; then
            PROTOC_ARCH="aarch_64"
          else
            echo "Unsupported architecture: $ARCH"
            exit 1
          fi
          
          PROTOC_ZIP="protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip"
          curl -OL "https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_ZIP}"
          sudo unzip -o "$PROTOC_ZIP" -d /usr/local bin/protoc
          sudo unzip -o "$PROTOC_ZIP" -d /usr/local 'include/*'
          rm -f "$PROTOC_ZIP"
          
          # Verify installation
          protoc --version
      - name: protoc-gen deps
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          go install github.com/mitchellh/protoc-gen-go-json@v1.1.0
      - name: Install packaging deps
        uses: ConorMacBride/install-package@v1
        with:
          apt: openssl sqlite3 gettext findutils jq
      - name: create deb
        run: |
          mkdir /tmp/veraison-package
          deployments/debian/deployment.sh create-deb /tmp/veraison-package
      - name: upload deb
        uses: actions/upload-artifact@v4
        with:
          name: Veraison services Debian package
          path: /tmp/veraison-package/*deb
      - name: attest deb
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: /tmp/veraison-package/*deb

test_name: enacttrust-badkey

marks:
  - parametrize:
      key:
        #  Attestation scheme -- this is used to indicate how test cases should
        #  be constructed (e.g. how the evidence token will be compiled.
        - scheme
        # Some attestation schemes (currently, only PSA) may support multiple
        # profiles. If a scheme does not support multiple profiles, specify it
        # as '_'.
        - profile
        # The name of the endorsements spec within common.yaml
        - endorsements
        # Signing keys that will be used to construct the evidence. How this is
        # used is dependent on the scheme.
        - signing
      vals:
        - [enacttrust, _, mini-bad, ec.p256.enacttrust]

includes:
  - !include common.yaml

stages:
  - name: submit post request to the provisioning service successfully
    request:
      method: POST
      url: http://{provisioning-service}/endorsement-provisioning/v1/submit
      headers:
        content-type: '{endorsements-content-type}' # set via hook
      file_body: __generated__/endorsements/corim-{scheme}-{endorsements}.cbor
    response:
      status_code: 200
      json:
        status: failed
        failure-reason: 'submit endorsement returned error: submit endorsements failed: RPC server returned error: plugin "unsigned-corim (TPM EnactTrust profile)" returned error: bad key in CoMID at index 0: could not base64-decode ak-pub: illegal base64 data at input byte 0'
        # NOTE: the commented version below is for builtin plugins.
        #failure-reason: 'submit endorsement returned error: submit endorsements failed: bad key in CoMID at index 0: could not base64-decode ak-pub: illegal base64 data at input byte 0'
